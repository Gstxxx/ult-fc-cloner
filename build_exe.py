#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script para construir o execut√°vel do EA FC 25 Web App Scraper
Vers√£o simplificada - sem config.py
"""

import os
import sys
import shutil
import subprocess
from pathlib import Path

def verificar_python():
    """Verifica a vers√£o do Python"""
    print("‚úÖ Python {}.{}.{} - OK".format(*sys.version_info[:3]))
    return True

def verificar_arquivos():
    """Verifica se os arquivos necess√°rios existem"""
    print("üîç Verificando arquivos necess√°rios...")
    
    arquivos_necessarios = [
        'fc25_scraper.py',
        'requirements.txt',
        'fc25_scraper.spec'
    ]
    
    todos_ok = True
    for arquivo in arquivos_necessarios:
        if os.path.exists(arquivo):
            print(f"   ‚úÖ {arquivo}")
        else:
            print(f"   ‚ùå {arquivo} - N√ÉO ENCONTRADO")
            todos_ok = False
    
    return todos_ok

def limpar_builds_anteriores():
    """Remove builds anteriores"""
    print("üßπ Limpando builds anteriores...")
    
    pastas_para_limpar = ['build', 'dist', '__pycache__']
    
    for pasta in pastas_para_limpar:
        if os.path.exists(pasta):
            try:
                shutil.rmtree(pasta)
                print(f"   ‚úÖ {pasta} removida")
            except Exception as e:
                print(f"   ‚ö†Ô∏è Erro ao remover {pasta}: {e}")

def instalar_dependencias():
    """Instala as depend√™ncias necess√°rias"""
    print("üì¶ Instalando depend√™ncias...")
    
    try:
        subprocess.run([sys.executable, '-m', 'pip', 'install', '-r', 'requirements.txt'], 
                      check=True, capture_output=True, text=True)
        print("   ‚úÖ Depend√™ncias instaladas")
        return True
    except subprocess.CalledProcessError as e:
        print(f"   ‚ùå Erro ao instalar depend√™ncias: {e}")
        return False

def construir_executavel():
    """Constr√≥i o execut√°vel usando PyInstaller"""
    print("üî® Construindo execut√°vel...")
    
    try:
        # Comando PyInstaller
        cmd = [
            sys.executable, '-m', 'PyInstaller',
            '--onefile',
            '--windowed',
            '--name=fc25_scraper',
            '--add-data=requirements.txt;.',
            'fc25_scraper.py'
        ]
        
        print(f"   Executando: {' '.join(cmd)}")
        
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("   ‚úÖ Execut√°vel constru√≠do com sucesso!")
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"   ‚ùå Erro ao construir execut√°vel: {e}")
        print(f"   Erro: {e.stderr}")
        return False

def verificar_executavel():
    """Verifica se o execut√°vel foi criado"""
    print("üîç Verificando execut√°vel...")
    
    executavel_path = os.path.join('dist', 'fc25_scraper.exe')
    
    if os.path.exists(executavel_path):
        tamanho = os.path.getsize(executavel_path) / (1024 * 1024)  # MB
        print(f"   ‚úÖ Execut√°vel criado: {executavel_path}")
        print(f"   üìè Tamanho: {tamanho:.1f} MB")
        return True
    else:
        print(f"   ‚ùå Execut√°vel n√£o encontrado: {executavel_path}")
        return False

def criar_arquivo_batch():
    """Cria um arquivo .bat para facilitar a execu√ß√£o"""
    print("üìù Criando arquivo batch...")
    
    batch_content = """@echo off
echo ========================================
echo EA FC 25 WEB APP SCRAPER
echo ========================================
echo.
echo Iniciando scraper...
echo.
fc25_scraper.exe
echo.
echo Pressione qualquer tecla para sair...
pause > nul
"""
    
    try:
        with open(os.path.join('dist', 'Executar_Scraper.bat'), 'w', encoding='utf-8') as f:
            f.write(batch_content)
        print("   ‚úÖ Arquivo batch criado: Executar_Scraper.bat")
        return True
    except Exception as e:
        print(f"   ‚ùå Erro ao criar arquivo batch: {e}")
        return False

def criar_instrucoes():
    """Cria arquivo de instru√ß√µes"""
    print("üìñ Criando instru√ß√µes...")
    
    instrucoes = """EA FC 25 WEB APP SCRAPER - INSTRU√á√ïES

COMO USAR:
1. Execute fc25_scraper.exe ou Executar_Scraper.bat
2. Fa√ßa login na sua conta EA no navegador
3. Navegue at√© 'Clube > Jogadores'
4. Pressione ENTER quando estiver pronto
5. Aguarde a coleta autom√°tica
6. Verifique o arquivo jogadores_fc25.csv

REQUISITOS:
- Windows 10/11
- Google Chrome instalado
- Conta EA com acesso ao FC 25 Web App
- Conex√£o com internet

DADOS COLETADOS:
- Nome, Overall, Posi√ß√£o, Clube
- Na√ß√£o, Liga, Qualidade do card
- Estat√≠sticas: PAC, SHO, PAS, DRI, DEF, PHY
- Traits, Status, Posi√ß√µes alternativas

SUPORTE:
- GitHub: https://github.com/Gstxxx/ult-fc-cloner
- Issues: https://github.com/Gstxxx/ult-fc-cloner/issues

Desenvolvido com ‚ù§Ô∏è para a comunidade EA FC 25
"""
    
    try:
        with open(os.path.join('dist', 'INSTRUCOES.txt'), 'w', encoding='utf-8') as f:
            f.write(instrucoes)
        print("   ‚úÖ Instru√ß√µes criadas: INSTRUCOES.txt")
        return True
    except Exception as e:
        print(f"   ‚ùå Erro ao criar instru√ß√µes: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("="*60)
    print("üî® CONSTRUTOR DE EXECUT√ÅVEL - EA FC 25 SCRAPER")
    print("="*60)
    
    # 1. Verifica Python
    if not verificar_python():
        return False
    
    # 2. Verifica arquivos
    if not verificar_arquivos():
        print("\n‚ùå Arquivos necess√°rios n√£o encontrados!")
        return False
    
    # 3. Limpa builds anteriores
    limpar_builds_anteriores()
    
    # 4. Instala depend√™ncias
    if not instalar_dependencias():
        print("\n‚ùå Erro ao instalar depend√™ncias!")
        return False
    
    # 5. Constr√≥i execut√°vel
    if not construir_executavel():
        print("\n‚ùå Erro ao construir execut√°vel!")
        return False
    
    # 6. Verifica execut√°vel
    if not verificar_executavel():
        print("\n‚ùå Execut√°vel n√£o foi criado!")
        return False
    
    # 7. Cria arquivos adicionais
    criar_arquivo_batch()
    criar_instrucoes()
    
    print("\n" + "="*60)
    print("üéâ BUILD CONCLU√çDO COM SUCESSO!")
    print("="*60)
    print("üìÅ Arquivos criados em: dist/")
    print("   - fc25_scraper.exe (execut√°vel principal)")
    print("   - Executar_Scraper.bat (script de execu√ß√£o)")
    print("   - INSTRUCOES.txt (instru√ß√µes de uso)")
    print("\nüöÄ Para usar:")
    print("   1. V√° para a pasta dist/")
    print("   2. Execute fc25_scraper.exe")
    print("   3. Siga as instru√ß√µes na tela")
    print("="*60)
    
    return True

if __name__ == "__main__":
    try:
        success = main()
        if not success:
            sys.exit(1)
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è Build cancelado pelo usu√°rio")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå Erro inesperado: {e}")
        sys.exit(1) 